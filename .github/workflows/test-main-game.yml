name: Test Main Game

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch: {}

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  PROJECT_PATH: UltraStar Play

jobs:
  test-job:
    name: Test for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 6000.1.3f1
        targetPlatform:
          # At the moment, tests are target platform independent. Thus only build one.
          - StandaloneWindows64
    steps:
      # Clone repo and restore cache
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v4
        with:
          path: ${{ env.PROJECT_PATH }}/Library
          key: Library-${{ env.PROJECT_PATH }}-${{ matrix.targetPlatform }}-${{ hashFiles(env.PROJECT_PATH) }}
          restore-keys: |
            Library-${{ env.PROJECT_PATH }}-${{ matrix.targetPlatform }}-
            Library-${{ env.PROJECT_PATH }}-
            Library-
      
      # Run setup script
      - name: Setup Script
        run: bash build.sh RestoreMainGameDependencies
      
      # Test Unity project
      - uses: game-ci/unity-test-runner@v4
        id: testRunner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ env.PROJECT_PATH }}
          unityVersion: ${{ matrix.unityVersion }}
          testMode: all
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          customParameters: "-nographics"

      # Upload test results
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Test results ${{ matrix.targetPlatform }}
          path: ${{ steps.testRunner.outputs.artifactsPath }}
